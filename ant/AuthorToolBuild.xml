<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     Aug 5, 2004 11:34:00 AM                                                        

     project    
     description
                   
     wugm                                                                
     ====================================================================== -->
<project name="AuthorTool" default="copy" basedir="..">
	<description>
		Copy all files needed to build the Reactome author tool by InstallAnywhere.
	</description>

	<!-- Defining a list of directory names to be used -->
	<property name="targetDir" value="${basedir}/../../ReactomeBuild/AuthorToolBuildFiles" />
	<property name="srcDir" value="${basedir}/src" />
	<property name="classDir" value="${basedir}/classes" />
	<property name="orgDir" value="${classDir}/org" />
	<property name="resourcesDir" value="${basedir}/resources" />
	<property name="imagesDir" value="${basedir}/images" />
	<property name="docsDir" value="${basedir}/docs" />
	<property name="docsImagesDir" value="${docsDir}/images" />
	<property name="libDir" value="${basedir}/lib" />

	<!-- Class path for all library files -->
	<path id="class.path">
		<fileset dir="${libDir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- Empty the direcotry. If nothing there, it should do nothing -->
	<target name="delete">
		<delete dir="${targetDir}" />
	</target>

	<!-- make a directory first. If it is there, it should do nothing -->
	<target name="mkdir" depends="delete">
		<mkdir dir="${targetDir}" /> 
	</target>

	<target name="clean">
		<mkdir dir="${classDir}"/>
	</target>

	<!-- compile source code from scratch -->
	<target name="compile" depends="clean">
		<mkdir dir="${classDir}" />
		<javac includeantruntime="false" srcdir="${srcDir}" destdir="${classDir}">
			<classpath refid="class.path" />
		</javac>
	</target>

	<!-- copy all files to the target directory -->
	<target name="copy" depends="compile, mkdir">
		<copy todir="${targetDir}/org">
			<fileset dir="${orgDir}">
				<exclude name="reactome/**" />
				<exclude name="gk/geneX/**" />
				<exclude name="gk/pathwayView/**" />
				<exclude name="gk/database/util/**" />
				<exclude name="gk/gkCurator/**" />
			</fileset>
		</copy>
		<copy todir="${targetDir}/resources">
			<fileset dir="${resourcesDir}" >
				<include name="*.txt" />
				<include name="*.xml" />
				<exclude name="curator.xml" />
				<exclude name="meta.xml" />
				<exclude name="update.xml" />
				<exclude name="Timings.xml" />
				<exclude name="SchemaDoc.xml" />
			</fileset>
		</copy>
		<copy todir="${targetDir}/images">
			<fileset dir="${imagesDir}" />
		</copy>
		<copy todir="${targetDir}/docs">
			<fileset dir="${docsDir}">
				<exclude name="**/CuratorTool*" />
				<exclude name="BugList.txt" />
				<exclude name="TODO.txt" />
				<exclude name="SynchronizationTestCases.txt" />
				<exclude name="geneExpression/**" />
				<exclude name="images/C*" />
			</fileset>
		</copy>
		<copy todir="${targetDir}/lib">
			<fileset dir="${libDir}">
				<exclude name="batik/**" />
				<exclude name="skin/themepack.zip" />
			</fileset>
		</copy>
	</target>
	<target name="run" depends="copy">
		<java dir="${targetDir}" classname="org.gk.gkEditor.GKEditorFrame" fork="true">
			<classpath>
				<pathelement location="${targetDir}"/>
				<fileset dir="${libDir}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>
	<!-- The following tasks are for MacOS X related work -->
	<!-- Generate a Jar files for Reactome Classes -->
	<property name="jarBundlerDir" value="/Developer/Applications/Java Tools/Jar Bundler.app/Contents/MacOS" />
	<property name="AppName" value="ReactomeAuthorTool" />
	<property name="macOSXAppDir" value="${targetDir}/${AppName}.app" />
	<property name="macOSXJavaRootDir" value="${macOSXAppDir}/Contents/Resources/Java" />
	<target name="buildForMac" depends="copy">
		<jar destfile="${targetDir}/reactome.jar">
			<fileset dir="${targetDir}">
				<include name="images/**" />
				<include name="org/**" />
			</fileset>
		</jar>
	</target>
	<!-- Make a system call to launch JarBundler. This should be handle by hand -->
	<!-- Remember to set the max heap size as 256 (don't add M, it will be attached by
	the JarBundler, and add -Dfile.encoding=UTF-8 for VM option -->
	<target name="runJarBundler">
		<exec dir="/Developer/Applications/Java Tools/Jar Bundler.app/Contents/MacOS" executable="open">
			<arg value="Jar Bundler" />
		</exec>
	</target>
	<!-- Copy all necessary resources files that cannot be contained by jar and zip it -->
	<target name="createMacApp">
		<copy todir="${macOSXJavaRootDir}">
			<fileset dir="${targetDir}">
				<include name="docs/**" />
				<include name="resources/**" />
				<include name="lib/skin/**.zip" />
			</fileset>
		</copy>
		<!-- Have to do a manual archive -->
		<!-- exec executable="zip">
			<arg value="${targetDir}/${AppName}.zip" />
			<arg value="${targetDir}/${AppName}.app" />
		</exec -->
	</target>
	
	<!-- These targets are used for deploy author tool as a Java Web Start application -->
	<property name="authorToolTargetDir" value="../ReactomeTools/WebContent/AuthorTool/" />
	<property name="appletTemp" value="appletTemp" />
	<target name="deployAsJWS" depends="compile">
		<copy file="${srcDir}/AuthorToolHtmlWrapper.html" todir="${authorToolTargetDir}" />
		<copy file="${libDir}/mysql/mysql-connector-java-5.0.8-bin.jar" tofile="${authorToolTargetDir}/mysql.jar" />
		<copy file="${libDir}/osxAdapter.jar" tofile="${authorToolTargetDir}/osxAdapter.jar" />
		<copy file="${libDir}/jdom/jdom-1.1.3.jar" tofile="${authorToolTargetDir}/jdom-1.1.3.jar" />
		<delete dir="${appletTemp}" />
		<mkdir dir="${appletTemp}" />
		<copy todir="${appletTemp}/org">
			<fileset dir="${orgDir}">
				<exclude name="reactome/**" />
				<exclude name="gk/geneX/**" />
				<exclude name="gk/pathView/**" />
				<exclude name="gk/gkCurator/**" />
				<exclude name="gk/examples/**" />
				<exclude name="gk/IDGeneration/**" />
				<exclude name="gk/pathwayLayout/**" />
				<exclude name="gk/qualityCheck/**" />
				<exclude name="gk/slicing/**" />
			</fileset>
		</copy>
		<copy todir="${appletTemp}/org/gk/util/images">
			<fileset dir="${imagesDir}" />
		</copy>
		<copy todir="${appletTemp}/org/gk/util/resources">
			<fileset dir="${resourcesDir}">
				<include name="Localizations.xml" />
				<include name="Taxons.xml" />
				<include name="ReferenceDatabases.xml" />
				<include name="gkEditor.prop" />
		    </fileset>
		</copy>
		<copy todir="${appletTemp}/docs">
			<fileset dir="${docsDir}">
				<include name="AuthorToolHelp.html" />
				<include name="tutorial.html" />
			</fileset>
		</copy>
		<copy todir="${appletTemp}/docs/images">
			<fileset dir="${docsImagesDir}">
				<exclude name="C*" />
			</fileset>
		</copy>
		<copy todir="${authorToolTargetDir}">
			<fileset dir="${basedir}/webstart">
				<include name="authorTool*" />
				<include name="download.html" />
			</fileset>
			<fileset dir="${imagesDir}">
				<include name="R-big.gif" />
			</fileset>
		</copy>
		<jar destfile="${authorToolTargetDir}/authortool.jar">
			<fileset dir="${appletTemp}">
			</fileset>
		</jar>
		<!-- delete dir="${appletTemp}"></delete -->
		<!-- Need to sign jar files -->
		<signjar alias="jws-cert" keystore="${basedir}/webstart/jws.key" storepass="cshlreactome">
			<fileset dir="${authorToolTargetDir}">
				<!-- Use the following line to sign authortool.jar only
				  	 so that other jar files will not be modified -->
				<include name="authortool.jar" />
				<!-- include name="mysql.jar" /-->
				<!-- include name="*.jar" / -->
			</fileset>
		</signjar>
	</target>
</project>